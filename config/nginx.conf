# Mapeia o host para a variável $subdomain.
# Se o host for "pm.localhost", $subdomain será "default".
# Se for "blog.pm.localhost", $subdomain será "blog".
map $host $subdomain {
    ~^(?<name>.+)\.pm\.localhost$ $name;
    default "default";
}

# Servidor HTTP que redireciona para HTTPS
server {
    listen 80;
    server_name pm.localhost *.pm.localhost;
    return 301 https://$host$request_uri;
}

# Servidor HTTPS principal, unificado para o domínio principal e subdomínios
server {
    listen 443 ssl http2;
    server_name pm.localhost ~^(?<subdomain_capture>.+)\.pm\.localhost$;

    # --- Configurações de SSL ---
    ssl_certificate /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # --- Cabeçalhos de Segurança ---
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:;" always;

    # --- Caminho Raiz Dinâmico ---
    # Usa a variável $subdomain definida no map
    root /app/$subdomain/public;
    index index.php index.html index.htm;

    # --- Logs Centralizados ---
    # Envia logs para a saída padrão do Docker para serem capturados por "docker logs"
    access_log /dev/stdout;
    error_log /dev/stderr warn; # Nível 'warn' é mais apropriado para dev do que 'debug'

    # --- Configurações de Locations ---
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        try_files $uri =404; # Medida de segurança: só passa para o PHP se o arquivo existir
        include fastcgi_params;
        fastcgi_pass php:9000;
        fastcgi_index index.php;
        fastcgi_read_timeout 300;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
    
    # Cache para assets estáticos
    location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|svg|woff|woff2)$ {
        expires 1d;
        add_header Cache-Control "public";
        access_log off; # Opcional: desliga o log de acesso para assets
    }

    # Bloqueia acesso a arquivos ocultos
    location ~ /\.(?!well-known).* {
        deny all;
    }

    # CORS para API (mantido como no original)
    location /api/ {
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'Content-Type, Authorization';
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }
}

server {
    listen 443 ssl http2;
    server_name mail.pm.localhost;

    ssl_certificate /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Configuração do Proxy Reverso
    location / {
        # O endereço interno do serviço maildev
        proxy_pass http://mailpit:8025;

        # Cabeçalhos importantes para o proxy funcionar corretamente
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Suporte a WebSockets (essencial para o MailDev atualizar em tempo real)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

server {
    listen 443 ssl http2;
    server_name adminer.pm.localhost;

    # Configurações de SSL (as mesmas dos outros serviços)
    ssl_certificate /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # --- Configuração do Proxy Reverso para o Adminer ---
    location / {
        # O endereço interno do serviço adminer e sua porta
        proxy_pass http://adminer:8080;

        # Cabeçalhos importantes para o proxy funcionar corretamente
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}